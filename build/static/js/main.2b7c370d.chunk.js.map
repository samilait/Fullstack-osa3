{"version":3,"sources":["services/Persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","personObject","post","id","delete","newPerson","put","Notification","message","className","ErrorNotification","errorMessage","Filter","handleNameSearch","onChange","PersonForm","props","onSubmit","addPerson","value","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","filteredPersons","removePerson","map","person","Person","name","number","onClick","window","confirm","App","useState","persons","setPersons","setNewName","setNewNumber","setFilteredPersons","setMessage","setErrorMessage","useEffect","personService","initialPersons","nameIncluded","includes","event","console","log","target","filterPersons","filter","toLowerCase","preventDefault","updatePerson","changedPerson","returnedPerson","setTimeout","catch","error","length","concat","rmPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b7c370d.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => {\r\n      return response.data\r\n  })  \r\n}\r\n\r\nconst create = personObject => {\r\n  const request = axios.post(baseUrl, personObject)\r\n  return request.then(response => response.data)    \r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst update = (id, newPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }\r\n  ","import React, { useState, useEffect } from 'react'\nimport personService from './services/Persons'\nimport './index.css'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className='notification'>\n      {message}\n    </div>\n  )\n}\n\nconst ErrorNotification = ({ errorMessage }) => {\n  if (errorMessage === null) {\n    return null\n  }\n\n  return (\n    <div className='errornotification'>\n      {errorMessage}\n    </div>\n  )\n}\n\nconst Filter = ({handleNameSearch}) => {\n  return (\n    <div>\n      filter shown with <input onChange={handleNameSearch} />\n    </div>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.addPerson}>\n        <div>\n          name: <input value={props.newName} onChange={props.handleNameChange} />\n        </div>\n        <div>\n          number: <input value={props.newNumber} onChange={props.handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nconst Persons = ({filteredPersons, removePerson}) => {\n  return (\n    <div>\n      {filteredPersons.map(person => <Person key={person.id} person={person} removePerson={removePerson} />)}\n    </div>\n  )\n}\n\nconst Person = ({ person, removePerson }) => {\n  return (\n    <p>{person.name} {person.number} <button onClick={() => { if (window.confirm(`Delete ${person.name}?`)) { {removePerson(person.id)}}}}>delete</button></p>\n  )\n}\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filteredPersons, setFilteredPersons] = useState(persons)\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n        setFilteredPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    if (!nameIncluded()) {\n      const personObject = {\n        name: newName, \n        number: newNumber,\n        id: persons.length + 1 \n      }\n\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setFilteredPersons(persons.concat(returnedPerson))\n\n          setMessage(`Added ${newName}`)\n          setTimeout(() => {\n            setMessage(null)\n          }, 3000)\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          setErrorMessage(error.response.data)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 3000)\n        })\n            \n    } else {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const updatePerson = persons.filter(person => person.name.toLowerCase().includes(newName.toLowerCase()))[0]\n        const changedPerson = { ...updatePerson, number : newNumber }\n\n        personService\n          .update(changedPerson.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== changedPerson.id ? person : returnedPerson))\n            setFilteredPersons(persons.map(person => person.id !== changedPerson.id ? person : returnedPerson))\n\n            setMessage(`Number replaced for ${newName}`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 3000)\n  \n          })\n          .catch(error => {\n            setErrorMessage(`Information on ${changedPerson.name} has already been removed from server`)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 3000)\n            setPersons(persons.filter(person => person.id !== changedPerson.id))\n            setFilteredPersons(persons.filter(person => person.id !== changedPerson.id))\n          })\n      }\n    }\n\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const removePerson = (id) => {\n    const rmPerson = persons.filter(person => person.id === id)[0]\n    personService\n      .remove(id)\n      .then(() => {\n        personService\n          .getAll()\n          .then(initialPersons => {\n            setPersons(initialPersons)\n            setFilteredPersons(initialPersons)\n\n            setMessage(`Removed ${rmPerson.name}`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 3000)\n\n          })      \n      })\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const nameIncluded = () => {\n    const names = persons.map(person => person.name)\n    if (names.includes(newName)) {\n      return true\n    }\n    return false\n  }\n\n  const handleNameSearch = (event) => {\n    console.log(event.target.value)\n    const filterPersons = persons.filter(person => person.name.toLowerCase().includes(event.target.value.toLowerCase()))\n    console.log('filtered', filterPersons)\n    setFilteredPersons(filterPersons)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <ErrorNotification errorMessage={errorMessage} />\n      <Filter handleNameSearch={handleNameSearch} />\n      <h3>Add a new</h3>\n      <PersonForm addPerson={addPerson} \n        newName={newName} \n        handleNameChange={handleNameChange} \n        newNumber={newNumber} \n        handleNumberChange={handleNumberChange} />\n      <h3>Numbers</h3>\n      <Persons filteredPersons={filteredPersons} removePerson={removePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}